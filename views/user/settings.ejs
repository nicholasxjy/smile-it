<!DOCTYPE html>
<html>
<head>
    <% include ../meta.ejs %>
    <link rel="stylesheet" href="../../css/assets/bootstrap.min.css"/>
    <link rel="stylesheet" href="../../css/icomoon.css">
    <link rel="stylesheet" href="../../css/assets/settings.css"/>
    <link rel="stylesheet" href="../build/imgly.css"/>
</head>
<body style="background-color: #e0e0e0;">
    <% include ../common/header.ejs %>
    <div class="setting-main">
        <div class="container setting-main-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="setting-title">
                        <h1><i class="icon icon-gear"></i>设置</h1>
                    </div>
                    <ul class="list-unstyled">
                        <li>
                            <a href="/settings">个人资料</a>
                        </li>
                        <li>
                            <a href="/setavatar">设置头像</a>
                        </li>
                        <li>
                            <a href="/setpass">重置密码</a>
                        </li>
                    </ul>
                </div>
                <div class="col-md-8"></div>
            </div>
        </div>
    </div>
<!-- load js here -->
<script src="js/utils/jquery-2.1-min.js"></script>
<script src="js/utils/bootstrap.min.js"></script>
<script src="../build/imgly.concat.js"></script>
<script>
    /**
     * imglyKit
     * integration example
     *
     * Copyright (c) 2013 img.ly
     */

    $(function () {
        var fileInput = document.getElementById("file")
                , renderButton = $("#renderButton")
                , imgly = new imglyKit({
                    container: "#container"
                });

        // As soon as the user selects a file...
        fileInput.addEventListener("change", function (event) {
            var file;

            // Find the selected file
            if(event.target.files) {
                file = event.target.files[0];
            } else {
                file = event.target.value;
            }

            // Use FileReader to turn the selected
            // file into a data url. imglyKit needs
            // a data url or an image
            var reader = new FileReader();
            reader.onload = (function(file) {
                return function (e) {
                    data = e.target.result;

                    // Run imglyKit with the selected file
                    try {
                        imgly.run(data);
                    } catch (e) {
                        if(e.name == "NoSupportError") {
                            alert("Your browser does not support canvas.");
                        } else if(e.name == "InvalidError") {
                            alert("The given file is not an image");
                        }
                    }
                };
            })(file);
            reader.readAsDataURL(file);
        });

        // As soon as the user clicks the render button...
        // Listen for "Render final image" click
        renderButton.click(function (event) {
            var dataUrl;
            event.preventDefault();
            // dataUrl = imgly.renderToDataURL("png", function (err, dataUrl) {});
            // `dataUrl` now contains the full-sized rendered image
            // Caution: This string will probably exceed the maximum
            // dataURL size of 2M. You will not be able to set location.href
            // or an <img> tag's `src` attribute to this dataUrl.

            // dataUrl = imgly.renderToDataURL("png", { maxSize: "100x100" }, function (err, dataUrl) {});
            // `dataUrl` now contains a resized rendered image that
            // does not exceed 100x100 while keeping the ratio

            // dataUrl = imgly.renderToDataURL("png", { size: "100x100" }, function (err, dataUrl) {});
            // `dataUrl` now contains a resized rendered image with
            // a size of 100x100 pixels while _not_ keeping the ratio

            imgly.renderToDataURL("png", { size: "300x" }, function (err, dataUrl) {
                // `dataUrl` now contains a resized rendered image with
                // a width of 300 pixels while keeping the ratio

                $("<img>").attr({
                    src: dataUrl
                }).appendTo($("#image-render-field"));
            });
        });
    });
</script>
<script>
    $(document).ready(function() {
        $('#post-settings').click(function(e) {
            e.preventDefault();
            e.stopPropagation();
            var container = document.getElementById('container');
            var name = $('#name').val();
            var email = $('#email').val();
            var location = $('#location').val() || '';
            var profile = $('#profile').val() || '';
            var canvas = container.getElementsByTagName('canvas')[0];
            var file;
            if (canvas) {
                file = canvas.toDataURL();
            }
            $.ajax({
                url: '/settings',
                type: 'POST',
                dataType: 'json',
                data: {
                    'name': name,
                    'email': email,
                    'file': file,
                    'location': location,
                    'profile': profile,
                    'gender': '0'
                }
            }).done(function(data) {
                if (data.status === 'success') {
                    window.location.href = '<%= locals.config.host %>';
                } else {
                    alert('oops, something problem here.');
                }
            }).fail(function(data) {
                alert('oops, something wrong.')
            });
        });
    });
</script>
</body>
</html>




